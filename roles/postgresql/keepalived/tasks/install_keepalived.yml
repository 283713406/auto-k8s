---
- name: Postgresql-keepalived | test virtual_ip unused,exec ping
  shell: "ping -c 3 {{ virtual_ip }}"
  register: ping_result
  failed_when: false
  when: inventory_hostname == groups['postgres'][0]

- name: Postgresql-keepalived | test virtual_ip unused,test ping result
  debug:
    msg: "please set virtual_ip to unused ip address"
  failed_when: true
  when: inventory_hostname == groups['postgres'][0] and ping_result.rc == 0

- name: Postgresql-keepalived | get the default cidr
  set_fact:
    mask_cidr: "{{ default_ip | ipaddr('prefix') }}"
  vars:
    default_ip: "{{ ansible_default_ipv4.address }}/{{ ansible_default_ipv4.netmask }}"

- name: Postgresql-keepalived | install keepalived
  shell: "yum install -y keepalived"

- name: Postgresql-keepalived | master apply keepalived-master.j2
  template:
    src: keepalived-master.j2
    dest: /etc/keepalived/keepalived.conf
    mode: 0644
    owner: root
    group: root
  when: inventory_hostname == groups['postgres'][0]

- name: Postgresql-keepalived | master start keepalived.conf server
  systemd:
    state: restarted
    enabled: yes
    daemon_reload: yes
    name: keepalived
  when: inventory_hostname == groups['postgres'][0]

- name: Postgresql-keepalived | slave apply keepalived-backup.j2
  template:
    src: keepalived-backup.j2
    dest: /etc/keepalived/keepalived.conf
    mode: 0644
    owner: root
    group: root
  when: inventory_hostname == groups['postgres'][1] or inventory_hostname == groups['postgres'][2]

- name: Postgresql-keepalived | slave start keepalived.conf server
  systemd:
    state: restarted
    enabled: yes
    daemon_reload: yes
    name: keepalived
  when: inventory_hostname == groups['postgres'][1] or inventory_hostname == groups['postgres'][2]
