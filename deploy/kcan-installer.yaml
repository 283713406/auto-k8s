---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: installerconfigurations.kcan.kylincloud.io
spec:
  group: kcan.kylincloud.io
  versions:
  - name: v1alpha1
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: installerconfigurations
    singular: installerconfiguration
    kind: InstallerConfiguration
    shortNames:
    - ic

---
apiVersion: v1
kind: Namespace
metadata:
  name: kylincloud-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kcan
  namespace: kylincloud-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kcan
rules:
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - tenant.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - certificates.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - devops.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - logging.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - jaegertracing.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - storage.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - policy
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - autoscaling
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - config.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - iam.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - notification.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - auditing.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - events.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - core.kubefed.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - kcan.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - storage.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - security.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.kiali.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - kiali.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - kubeedge.kylincloud.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - types.kubefed.io
  resources:
  - '*'
  verbs:
  - '*'

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kcan
subjects:
- kind: ServiceAccount
  name: kcan
  namespace: kylincloud-system
roleRef:
  kind: ClusterRole
  name: kcan
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kcan
  namespace: kylincloud-system
  labels:
    app: kcan-installer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kcan-installer
  template:
    metadata:
      labels:
        app: kcan-installer
    spec:
      serviceAccountName: kcan
      hostNetwork: true
      containers:
      - name: kcan
        image: registry.kylincloud.org/kcan-installer:v1.0.0
        imagePullPolicy: "IfNotPresent"
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/localtime
          name: host-time
        - mountPath: /kylincloud/inventory/inventory.ini
          name: ini
          subPath: inventory.ini
        - mountPath: /kylincloud/installer/roles/defaults/defaults/main.yaml
          name: conf
          subPath: main.yaml
      volumes:
      - hostPath:
          path: /etc/localtime
          type: ""
        name: host-time
      - configMap:
          defaultMode: 420
          name: kcan-ini
        name: ini
      - configMap:
          defaultMode: 420
          name: default-conf
        name: conf

---
apiVersion: v1
data:
  inventory.ini: |
    [all]
    deploy        ansible_host=172.20.188.116 ansible_user=root ansible_password=123123
    master1       ansible_host=172.20.188.100 ansible_user=root ansible_password=kylincloud@123.
    master2       ansible_host=172.20.188.101 ansible_user=root ansible_password=kylincloud@123.
    master3       ansible_host=172.20.188.102 ansible_user=root ansible_password=kylincloud@123.
    node1         ansible_host=172.20.188.113 ansible_user=root ansible_password=kylincloud@123.
    node2         ansible_host=172.20.188.114 ansible_user=root ansible_password=kylincloud@123.
    node3         ansible_host=172.20.188.115 ansible_user=root ansible_password=kylincloud@123.
    postgres1     ansible_host=172.20.188.106 ansible_user=root ansible_password=kylincloud@123.
    postgres2     ansible_host=172.20.188.107 ansible_user=root ansible_password=kylincloud@123.
    postgres3     ansible_host=172.20.188.108 ansible_user=root ansible_password=kylincloud@123.
    mysql1        ansible_host=172.20.188.109 ansible_user=root ansible_password=kylincloud@123.
    mysql2        ansible_host=172.20.188.110 ansible_user=root ansible_password=kylincloud@123.
    mysql3        ansible_host=172.20.188.111 ansible_user=root ansible_password=kylincloud@123.
    nfs           ansible_host=172.20.188.112 ansible_user=root ansible_password=kylincloud@123.
    nginxMaster   ansible_host=172.20.188.109 ansible_user=root ansible_password=123123
    nginxSlave    ansible_host=172.20.188.118 ansible_user=root ansible_password=123123
    radius1       ansible_host=172.20.188.112 ansible_user=root ansible_password=kylincloud@123.
    radius2       ansible_host=172.20.188.112 ansible_user=root ansible_password=kylincloud@123.
    radius3       ansible_host=172.20.188.112 ansible_user=root ansible_password=kylincloud@123.

    [k8s-master]
    master1
    master2
    master3

    [k8s-node]
    node1
    node2
    node3

    [postgres]
    postgres1
    postgres2
    postgres3

    [mysql]
    mysql1
    mysql2
    mysql3

    [nfs-servers]
    nfs

    [nginx-gw]
    nginxMaster
    nginxSlave

    [radius]
    radius1
    radius2
    radius3

    [dbinit]
    master1

    [k8s-cluster:children]
    k8s-master
    k8s-node

    [bootstrap:children]
    k8s-cluster
    nginx-gw

    [dbinit]
    master1
kind: ConfigMap
metadata:
  labels:
    app: kcan-installer
  name: kcan-ini
  namespace: kylincloud-system

---
apiVersion: v1
data:
  main.yaml: |
    ## global
    kylincloud_dir: /kylincloud/kylincloud
    kube_config_dir: /etc/kubernetes
    kube_cert_dir: "{{ kube_config_dir }}/ssl"
    kube_addons_dir: "{{ kube_config_dir }}/addons"
    # Directory where the binaries will be installed
    bin_dir: /usr/local/bin
    docker_bin_dir: /usr/bin
    etcd_data_dir: /var/lib/etcd

    ## bootstrap
    # 备份后需要恢复的文件
    backup_files:
      - "/etc/hosts"
      - "/etc/systemd/system/docker.service.d/docker-options.conf"
      - "/etc/docker/daemon.json"

    ## nfs and glusterfs
    nfs_dir: /opt/nfs
    tianyu_dir:
      - data/log
      - data/crt
      - data/apt-data
      - data/ipa
      - data/kim-sync
      - data/.ssh
    repo_dir:
      - psql/psql-data-0
      - psql/psql-data-1
      - psql/psql-data-2
      - krmp/dynflow-data
      - krmp/repo-data
      - krmp/repo-conf
      - krmp/repo-data/assets
      - krmp/repo-data/media
      - krmp/repo-data/tmp
      - krmp/repo-data/media/artifact
      - krmp/repo-data/media/upload
      - krmp/repo-conf/tmp
    softshop_dir:
      - manage/package

    ## registies
    # 根据环境情况修改对应的镜像仓库配置
    registries:
      # 麒麟容器云应用组件镜像仓库，请修改服务所在节点IP地址
      - ip: "172.20.43.55"
        name: "registry.kylincloud.org"
        port: "4001"

    ## dbinit
    # 使用k8s外部MySQL时， is_external 设置为true
    # 提供的用户需要有所有的权限
    maxscale_user: "dbinit"
    maxscale_pwd: "123456"
    maxscale_port: "3306"
    is_external: false
    mysql_uri: "127.0.0.1"
    mysql_port: "3306"
    mysql_user: "dbuser"
    mysql_pwd: "dbpwd"
    # 需要初始化的模块设置为true
    tianyu: true
    mirrors_update: true
    softshop: true

    ## keepalived
    #keepalived虚拟ip地址，配置为同一网段未使用的IP
    package: "/root/psql-{{ host_architecture }}.tar.gz"
    untar_package_dir: /opt/postgresql/package
    keepalived_dir: /home/postgres
    virtual_ip: 172.20.192.139
    virtual_router_id: 66
    reset_keepalived: false
    install_keepalived: false

    ## mysql
    install_mysql: false
    reset_mysql: false
    #数据库所有权限账号
    dbinit_user: dbinit
    dbinit_password: 123456
    #maxscale监控账号
    maxscale_monitor_user: maxscale_monitor
    maxscale_monitor_password: 123456
    #maxscale路由账号
    maxscale_route_user: maxscale_route
    maxscale_route_password: 123456

    ## nginx
    nginx_dir: /opt/nginx
    gateway_image: registry.kylincloud.org:4001/solution/tianyu/arm64/nginx:1.20.2
    softshopmanage_uri: softshopmanage
    softshopclient_uri: softshopclient
    krmp_uri: krmp
    krmprepo_uri: krmprepo
    krmpmanage_uri: krmpmanage
    updateweb_uri: updateweb
    kcm_uri: kcm
    kcmsync_uri: kcmsync
    kcmserver_uri: kcmserver
    kim_uri: kim
    kcmhttpd_uri: kcmhttpd
    verifycode_uri: verifycode

    ## postgres
    _host_architecture_groups:
      x86_64: amd64
      aarch64: arm64
      armv7l: arm
    host_architecture: >-
      {%- if ansible_architecture in _host_architecture_groups -%}
      {{ _host_architecture_groups[ansible_architecture] }}
      {%- else -%}
      {{ ansible_architecture }}
      {%- endif -%}
    #外部的etcd地址，如192.168.0.1:2379
    #out_etcd_address:
    install_pg: false
    uninstall_pg: false
    reset_etcd: false
    reset_pg: false
    reset_patroni: false
    reset_haproxy: false

    ## radius
    radius_server_dir: /opt/radius-server
    radius_proxy_dir: /opt/radius-proxy
    radius_otp_dir: /opt/radius-otp
    radiusOtpImage: "registry.kylincloud.org:4001/solution/ha/radius/arm64/freeradius:3.0.25"
    radiusProxyImage: "registry.kylincloud.org:4001/solution/ha/radius/arm64/freeradius:3.0.25.1"
    radiusServerImage: "registry.kylincloud.org:4001/solution/ha/radius/arm64/kylinradius:1.0.1"
    driver: json-file
    opts:  {"max-size":"50m", "max-file":"3"}
    baseurl: 'http://{{ hostvars["deploy"]["ansible_host"] }}:8080/'
    proxy:
      backend:
        port: 11812
      ip: "*"
      port: 1812
      balance_type: "fail-over"
      client_whitelist:
        host: "*"
        secret: "netpass"
    serverLocal:
      port: 1812
      secret: "netpass"
    backend:
      Cleartext_Password: "kylinos123"
    otpserver_dev:
      port: 21812
      secret: "netpass"
      type: "auth"
      client_whitelist:
        host: "*"
        secret: "netpass"
kind: ConfigMap
metadata:
  labels:
    app: kcan-installer
  name: default-conf
  namespace: kylincloud-system